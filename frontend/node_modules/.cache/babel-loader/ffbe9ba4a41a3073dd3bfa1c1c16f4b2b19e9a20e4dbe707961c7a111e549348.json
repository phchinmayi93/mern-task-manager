{"ast":null,"code":"var _jsxFileName = \"Z:\\\\mern-task-app\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Task from \"./Task\";\nimport TaskForm from \"./TaskForm\";\nimport axios from 'axios';\nimport { URL } from \"../App\";\n// http://localhost:5000/api/tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    completed: false\n  });\n  const {\n    name\n  } = formData;\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const getTasks = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`${URL}/api/tasks`);\n      console.log(response);\n      setIsLoading(false);\n    } catch (error) {\n      toast.error(error.message);\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    getTasks();\n  });\n  const createTask = async e => {\n    e.preventDefault();\n    if (name === \"\") {\n      return toast.error(\"Input Field cannot be empty\");\n    }\n    try {\n      await axios.post(`${URL}/api/tasks`, formData);\n      toast.success('Successfully created!');\n      setFormData({\n        ...formData,\n        name: \"\"\n      });\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      name: name,\n      handleInputChange: handleInputChange,\n      createTask: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"--flex-between --pb\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Total Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), \"  0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Completed Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), \"  0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"XGKTh7rdgmViLSI3NTfW1DfGPbc=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useEffect","useState","toast","Task","TaskForm","axios","URL","TaskList","tasks","setTasks","completedTasks","setCompletedTasks","isLoading","setIsLoading","formData","setFormData","name","completed","handleInputChange","e","value","target","getTasks","response","get","console","log","error","message","createTask","preventDefault","post","success"],"sources":["Z:/mern-task-app/frontend/src/components/TaskList.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { toast } from \"react-toastify\"\r\nimport Task from \"./Task\"\r\nimport TaskForm from \"./TaskForm\"\r\n\r\n\r\nimport axios from 'axios';\r\nimport { URL } from \"../App\"\r\n// http://localhost:5000/api/tasks\r\n\r\nconst TaskList = () => {\r\n    const [ tasks,setTasks] = useState([])\r\n    const [ completedTasks,setCompletedTasks] = useState([])\r\n    const [ isLoading,setIsLoading] = useState(false)\r\n const [formData, setFormData] = useState({\r\n    name:\"\",\r\n    completed:false\r\n })\r\n\r\n const {name} = formData\r\n\r\n const handleInputChange = (e) =>{\r\n    const { name, value} = e.target\r\n    setFormData({...formData, [name]:value})\r\n };\r\n\r\n const getTasks = async () =>{\r\n    setIsLoading(true)\r\n    try {\r\n        const response = await axios.get(`${URL}/api/tasks`)\r\n        console.log(response);\r\n        setIsLoading(false)\r\n        \r\n    } catch (error) {\r\n        toast.error(error.message)\r\n        console.log(error);\r\n        setIsLoading(false)\r\n    }\r\n }\r\n\r\n useEffect(()=>{\r\n    getTasks()\r\n })\r\n\r\n const createTask = async (e) =>{\r\n\r\n    e.preventDefault()\r\n     if(name === \"\")\r\n     {\r\n        return toast.error(\"Input Field cannot be empty\")\r\n     }\r\n\r\n     try {\r\n        await axios.post(`${URL}/api/tasks`, formData);\r\n        \r\n     toast.success('Successfully created!');\r\n\r\n        setFormData({...formData,name:\"\"})\r\n     } catch (error) {\r\n        toast.error(error.message)\r\n     }\r\n }\r\n  return (\r\n    <div><h2>\r\n        Task Manager</h2>\r\n        <TaskForm name = {name} handleInputChange={handleInputChange} createTask={createTask} />\r\n        <div className=\"--flex-between --pb\">\r\n            \r\n            <p>\r\n                <b>Total Tasks:</b>  0 \r\n            </p>\r\n            <p>\r\n                <b>Completed Tasks:</b>  0 \r\n            </p>\r\n            \r\n     </div>\r\n     <hr />\r\n     <Task />\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default TaskList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}