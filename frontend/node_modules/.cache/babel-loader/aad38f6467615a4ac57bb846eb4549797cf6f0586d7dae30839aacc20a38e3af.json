{"ast":null,"code":"var _jsxFileName = \"Z:\\\\mern-task-app\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { URL } from \"../App\";\nimport Task from \"./Task\";\nimport TaskForm from \"./TaskForm\";\nimport loadingImg from \"../assets/loader.gif\";\n\n// http://localhost:5000/api/tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [taskID, setTaskID] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    completed: false\n  });\n  const {\n    name\n  } = formData;\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const getTasks = async () => {\n    setIsLoading(true);\n    try {\n      const {\n        data\n      } = await axios.get(`${URL}/api/tasks`);\n      setTasks(data);\n      setIsLoading(false);\n    } catch (error) {\n      toast.error(error.message);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    getTasks();\n  }, []);\n  const createTask = async e => {\n    e.preventDefault();\n    if (name === \"\") {\n      return toast.error(\"Input field cannot be empty\");\n    }\n    try {\n      await axios.post(`${URL}/api/tasks`, formData);\n      toast.success(\"Task added successfully\");\n      setFormData({\n        ...formData,\n        name: \"\"\n      });\n      getTasks();\n    } catch (error) {\n      toast.error(error.message);\n      console.log(error);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`${URL}/api/tasks/${id}`);\n      getTasks();\n      toast.success(\"Selected Task Deleted successfully\");\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  useEffect(() => {\n    const cTask = tasks.filter(task => {\n      return task.completed === true;\n    });\n    setCompletedTasks(cTask);\n  }, [tasks]);\n  const getSingleTask = async task => {\n    setFormData({\n      name: task.name,\n      completed: false\n    });\n    setTaskID(task._id);\n    setIsEditing(true);\n  };\n  const updateTask = async e => {\n    e.preventDefault();\n    if (name === \"\") {\n      return toast.error(\"Input field cannot be empty.\");\n    }\n    try {\n      await axios.put(`${URL}/api/tasks/${taskID}`, formData);\n      setFormData({\n        ...formData,\n        name: \"\"\n      });\n      setIsEditing(false);\n      toast.success(\"Updated successfully\");\n      getTasks();\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const setToComplete = async task => {\n    const newFormData = {\n      name: task.name,\n      completed: true\n    };\n    try {\n      await axios.put(`${URL}/api/tasks/${task._id}`, newFormData);\n      getTasks();\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      name: name,\n      handleInputChange: handleInputChange,\n      createTask: createTask,\n      isEditing: isEditing,\n      updateTask: updateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"--flex-between --pb\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Total Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), \" \", tasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Completed Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), \" \", completedTasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"--flex-center\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingImg,\n        alt: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), !isLoading && tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"--py\",\n      children: \"No task added. Please add a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: tasks.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          index: index,\n          deleteTask: deleteTask,\n          getSingleTask: getSingleTask,\n          setToComplete: setToComplete\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"AKph40JMrS9lGaROjMLNi4CvM/k=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["axios","useEffect","useState","toast","URL","Task","TaskForm","loadingImg","TaskList","tasks","setTasks","completedTasks","setCompletedTasks","isLoading","setIsLoading","isEditing","setIsEditing","taskID","setTaskID","formData","setFormData","name","completed","handleInputChange","e","value","target","getTasks","data","get","error","message","createTask","preventDefault","post","success","console","log","deleteTask","id","delete","cTask","filter","task","getSingleTask","_id","updateTask","put","setToComplete","newFormData","length","map","index"],"sources":["Z:/mern-task-app/frontend/src/components/TaskList.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { URL } from \"../App\";\r\nimport Task from \"./Task\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport loadingImg from \"../assets/loader.gif\";\r\n\r\n// http://localhost:5000/api/tasks\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [completedTasks, setCompletedTasks] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [taskID, setTaskID] = useState(\"\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    completed: false,\r\n  });\r\n  const { name } = formData;\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const getTasks = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.get(`${URL}/api/tasks`);\r\n      setTasks(data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n\r\n  const createTask = async (e) => {\r\n    e.preventDefault();\r\n    if (name === \"\") {\r\n      return toast.error(\"Input field cannot be empty\");\r\n    }\r\n    try {\r\n      await axios.post(`${URL}/api/tasks`, formData);\r\n      toast.success(\"Task added successfully\");\r\n      setFormData({ ...formData, name: \"\" });\r\n      getTasks();\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`${URL}/api/tasks/${id}`);\r\n      getTasks();\r\n      toast.success(\"Selected Task Deleted successfully\")\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const cTask = tasks.filter((task) => {\r\n      return task.completed === true;\r\n    });\r\n    setCompletedTasks(cTask);\r\n  }, [tasks]);\r\n\r\n  const getSingleTask = async (task) => {\r\n    setFormData({ name: task.name, completed: false });\r\n    setTaskID(task._id);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const updateTask = async (e) => {\r\n    e.preventDefault();\r\n    if (name === \"\") {\r\n      return toast.error(\"Input field cannot be empty.\");\r\n    }\r\n    try {\r\n      await axios.put(`${URL}/api/tasks/${taskID}`, formData);\r\n      setFormData({ ...formData, name: \"\" });\r\n      setIsEditing(false);\r\n      toast.success(\"Updated successfully\")\r\n      getTasks();\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const setToComplete = async (task) => {\r\n    const newFormData = {\r\n      name: task.name,\r\n      completed: true,\r\n    };\r\n    try {\r\n      await axios.put(`${URL}/api/tasks/${task._id}`, newFormData);\r\n      getTasks();\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Manager</h2>\r\n      <TaskForm\r\n        name={name}\r\n        handleInputChange={handleInputChange}\r\n        createTask={createTask}\r\n        isEditing={isEditing}\r\n        updateTask={updateTask}\r\n      />\r\n      {tasks.length > 0 && (\r\n        <div className=\"--flex-between --pb\">\r\n          <p>\r\n            <b>Total Tasks:</b> {tasks.length}\r\n          </p>\r\n          <p>\r\n            <b>Completed Tasks:</b> {completedTasks.length}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <hr />\r\n      {isLoading && (\r\n        <div className=\"--flex-center\">\r\n          <img src={loadingImg} alt=\"Loading\" />\r\n        </div>\r\n      )}\r\n      {!isLoading && tasks.length === 0 ? (\r\n        <p className=\"--py\">No task added. Please add a task</p>\r\n      ) : (\r\n        <>\r\n          {tasks.map((task, index) => {\r\n            return (\r\n              <Task\r\n                key={task._id}\r\n                task={task}\r\n                index={index}\r\n                deleteTask={deleteTask}\r\n                getSingleTask={getSingleTask}\r\n                setToComplete={setToComplete}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}