{"ast":null,"code":"var _jsxFileName = \"Z:\\\\mern-task-app\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Task from \"./Task\";\nimport TaskForm from \"./TaskForm\";\nimport axios from 'axios';\n// http://localhost:5000/api/tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    completed: false\n  });\n  const {\n    name\n  } = formData;\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const createTask = async e => {\n    e.preventDefault();\n    if (name === \"\") {\n      return toast.error(\"Input Field cannot be empty\");\n    }\n    try {\n      await axios.post(\"http://localhost:5000/api/tasks\", formData);\n      setFormData({\n        ...formData,\n        name: \"\"\n      });\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      name: name,\n      handleInputChange: handleInputChange,\n      createTask: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"--flex-between --pb\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Total Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), \"  0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Completed Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), \"  0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"7RNGGeoP/93jz32etRuoYfXDF3c=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useState","toast","Task","TaskForm","axios","TaskList","formData","setFormData","name","completed","handleInputChange","e","value","target","createTask","preventDefault","error","post","message"],"sources":["Z:/mern-task-app/frontend/src/components/TaskList.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { toast } from \"react-toastify\"\r\nimport Task from \"./Task\"\r\nimport TaskForm from \"./TaskForm\"\r\nimport axios from 'axios';\r\n// http://localhost:5000/api/tasks\r\n\r\nconst TaskList = () => {\r\n const [formData, setFormData] = useState({\r\n    name:\"\",\r\n    completed:false\r\n })\r\n\r\n const {name} = formData\r\n\r\n const handleInputChange = (e) =>{\r\n    const { name, value} = e.target\r\n    setFormData({...formData, [name]:value})\r\n };\r\n\r\n const createTask = async (e) =>{\r\n\r\n    e.preventDefault()\r\n     if(name === \"\")\r\n     {\r\n        return toast.error(\"Input Field cannot be empty\")\r\n     }\r\n\r\n     try {\r\n        await axios.post(\"http://localhost:5000/api/tasks\", formData)\r\n\r\n        setFormData({...formData,name:\"\"})\r\n     } catch (error) {\r\n        toast.error(error.message)\r\n     }\r\n }\r\n  return (\r\n    <div><h2>\r\n        Task Manager</h2>\r\n        <TaskForm name = {name} handleInputChange={handleInputChange} createTask={createTask} />\r\n        <div className=\"--flex-between --pb\">\r\n            \r\n            <p>\r\n                <b>Total Tasks:</b>  0 \r\n            </p>\r\n            <p>\r\n                <b>Completed Tasks:</b>  0 \r\n            </p>\r\n            \r\n     </div>\r\n     <hr />\r\n     <Task />\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default TaskList"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACtCQ,IAAI,EAAC,EAAE;IACPC,SAAS,EAAC;EACb,CAAC,CAAC;EAEF,MAAM;IAACD;EAAI,CAAC,GAAGF,QAAQ;EAEvB,MAAMI,iBAAiB,GAAIC,CAAC,IAAI;IAC7B,MAAM;MAAEH,IAAI;MAAEI;IAAK,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC/BN,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,CAACE,IAAI,GAAEI;IAAK,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,UAAU,GAAG,MAAOH,CAAC,IAAI;IAE5BA,CAAC,CAACI,cAAc,EAAE;IACjB,IAAGP,IAAI,KAAK,EAAE,EACd;MACG,OAAOP,KAAK,CAACe,KAAK,CAAC,6BAA6B,CAAC;IACpD;IAEA,IAAI;MACD,MAAMZ,KAAK,CAACa,IAAI,CAAC,iCAAiC,EAAEX,QAAQ,CAAC;MAE7DC,WAAW,CAAC;QAAC,GAAGD,QAAQ;QAACE,IAAI,EAAC;MAAE,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACbf,KAAK,CAACe,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC7B;EACJ,CAAC;EACA,oBACE;IAAA,wBAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACgB,eACjB,QAAC,QAAQ;MAAC,IAAI,EAAIV,IAAK;MAAC,iBAAiB,EAAEE,iBAAkB;MAAC,UAAU,EAAEI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACxF;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAEhC;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB;MAAA;QAAA;QAAA;QAAA;MAAA,QACnB,eACJ;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA,QACvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,eACN;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEX,CAAC;AAAA,GA/CKT,QAAQ;AAAA,KAARA,QAAQ;AAiDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}